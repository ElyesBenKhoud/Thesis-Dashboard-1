[{"C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\index.js":"1","C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\serviceWorker.js":"2","C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\context\\UserContext.js":"3","C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\components\\App.js":"4","C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\context\\LayoutContext.js":"5","C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\themes\\index.js":"6","C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\themes\\default.js":"7","C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\components\\Layout\\Layout.js":"8","C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\pages\\login\\Login.js":"9","C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\pages\\error\\Error.js":"10","C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\pages\\error\\styles.js":"11","C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\pages\\login\\styles.js":"12","C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\components\\Layout\\styles.js":"13","C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\pages\\charts\\Charts.js":"14","C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\pages\\icons\\Icons.js":"15","C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\pages\\tables\\Tables.js":"16","C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\pages\\maps\\Maps.js":"17","C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\pages\\typography\\Typography.js":"18","C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\pages\\dashboard\\Dashboard.js":"19","C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\components\\Sidebar\\Sidebar.js":"20","C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\pages\\notifications\\Notifications.js":"21","C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\components\\Header\\Header.js":"22","C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\pages\\charts\\components\\ApexHeatmap.js":"23","C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\pages\\dashboard\\mock.js":"24","C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\pages\\maps\\styles.js":"25","C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\pages\\icons\\styles.js":"26","C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\pages\\charts\\components\\ApexLineChart.js":"27","C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\pages\\notifications\\styles.js":"28","C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\pages\\dashboard\\components\\Table\\Table.js":"29","C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\components\\Sidebar\\styles.js":"30","C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\components\\PageTitle\\PageTitle.js":"31","C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\components\\Sidebar\\components\\Dot.js":"32","C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\pages\\dashboard\\components\\BigStat\\BigStat.js":"33","C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js":"34","C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\pages\\dashboard\\styles.js":"35","C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\components\\Widget\\Widget.js":"36","C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\pages\\typography\\styles.js":"37","C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\components\\Wrappers\\Wrappers.js":"38","C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\components\\Header\\styles.js":"39","C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\components\\Notification\\Notification.js":"40","C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\components\\UserAvatar\\UserAvatar.js":"41","C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\components\\PageTitle\\styles.js":"42","C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js":"43","C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\pages\\dashboard\\components\\BigStat\\styles.js":"44","C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\components\\Widget\\styles.js":"45","C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\components\\Notification\\styles.js":"46","C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\components\\UserAvatar\\styles.js":"47"},{"size":691,"mtime":1635847372048,"results":"48","hashOfConfig":"49"},{"size":5083,"mtime":1635794663626,"results":"50","hashOfConfig":"49"},{"size":2053,"mtime":1635794663589,"results":"51","hashOfConfig":"49"},{"size":1787,"mtime":1635794663561,"results":"52","hashOfConfig":"49"},{"size":1444,"mtime":1635794663589,"results":"53","hashOfConfig":"49"},{"size":534,"mtime":1635794663628,"results":"54","hashOfConfig":"49"},{"size":3127,"mtime":1635794663628,"results":"55","hashOfConfig":"49"},{"size":3753,"mtime":1635858313531,"results":"56","hashOfConfig":"49"},{"size":8154,"mtime":1635849538479,"results":"57","hashOfConfig":"49"},{"size":1626,"mtime":1635794663604,"results":"58","hashOfConfig":"49"},{"size":1395,"mtime":1635794663606,"results":"59","hashOfConfig":"49"},{"size":2990,"mtime":1635857630458,"results":"60","hashOfConfig":"49"},{"size":710,"mtime":1635794663567,"results":"61","hashOfConfig":"49"},{"size":5765,"mtime":1635860959588,"results":"62","hashOfConfig":"49"},{"size":421843,"mtime":1635861229311,"results":"63","hashOfConfig":"49"},{"size":1465,"mtime":1635860174022,"results":"64","hashOfConfig":"49"},{"size":1010,"mtime":1635794663616,"results":"65","hashOfConfig":"49"},{"size":4648,"mtime":1635861124071,"results":"66","hashOfConfig":"49"},{"size":15763,"mtime":1635864651941,"results":"67","hashOfConfig":"49"},{"size":4615,"mtime":1635861435827,"results":"68","hashOfConfig":"49"},{"size":15143,"mtime":1635858968593,"results":"69","hashOfConfig":"49"},{"size":10239,"mtime":1635857878347,"results":"70","hashOfConfig":"49"},{"size":1909,"mtime":1635794663594,"results":"71","hashOfConfig":"49"},{"size":3822,"mtime":1635864591482,"results":"72","hashOfConfig":"49"},{"size":178,"mtime":1635794663617,"results":"73","hashOfConfig":"49"},{"size":812,"mtime":1635794663612,"results":"74","hashOfConfig":"49"},{"size":1396,"mtime":1635794663595,"results":"75","hashOfConfig":"49"},{"size":1943,"mtime":1635794663621,"results":"76","hashOfConfig":"49"},{"size":1443,"mtime":1635860130638,"results":"77","hashOfConfig":"49"},{"size":1363,"mtime":1635794663579,"results":"78","hashOfConfig":"49"},{"size":447,"mtime":1635794663571,"results":"79","hashOfConfig":"49"},{"size":902,"mtime":1635794663576,"results":"80","hashOfConfig":"49"},{"size":4160,"mtime":1635794663599,"results":"81","hashOfConfig":"49"},{"size":4589,"mtime":1635794663578,"results":"82","hashOfConfig":"49"},{"size":3000,"mtime":1635794663603,"results":"83","hashOfConfig":"49"},{"size":2581,"mtime":1635794663583,"results":"84","hashOfConfig":"49"},{"size":389,"mtime":1635794663625,"results":"85","hashOfConfig":"49"},{"size":3971,"mtime":1635794663587,"results":"86","hashOfConfig":"49"},{"size":4043,"mtime":1635794663565,"results":"87","hashOfConfig":"49"},{"size":3413,"mtime":1635794663568,"results":"88","hashOfConfig":"49"},{"size":620,"mtime":1635794663580,"results":"89","hashOfConfig":"49"},{"size":482,"mtime":1635794663572,"results":"90","hashOfConfig":"49"},{"size":1474,"mtime":1635794663578,"results":"91","hashOfConfig":"49"},{"size":1075,"mtime":1635794663600,"results":"92","hashOfConfig":"49"},{"size":1015,"mtime":1635794663585,"results":"93","hashOfConfig":"49"},{"size":1040,"mtime":1635794663570,"results":"94","hashOfConfig":"49"},{"size":291,"mtime":1635794663582,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"7mycbe",{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"98"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"98"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\index.js",[],["193","194"],"C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\serviceWorker.js",[],"C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\context\\UserContext.js",[],"C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\components\\App.js",[],"C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\context\\LayoutContext.js",[],"C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\themes\\index.js",[],"C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\themes\\default.js",[],"C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\components\\Layout\\Layout.js",["195","196"],"C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\pages\\login\\Login.js",["197"],"import React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  CircularProgress,\r\n  Typography,\r\n  Button,\r\n  Tabs,\r\n  Tab,\r\n  TextField,\r\n  Fade,\r\n} from \"@material-ui/core\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// logo\r\nimport google from \"../../images/google.svg\";\r\nimport bg from \"../../images/Onboarding.png\";\r\n\r\n// context\r\nimport { useUserDispatch, loginUser } from \"../../context/UserContext\";\r\n\r\nfunction Login(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var userDispatch = useUserDispatch();\r\n\r\n  // local\r\n  var [isLoading, setIsLoading] = useState(false);\r\n  var [error, setError] = useState(null);\r\n  var [activeTabId, setActiveTabId] = useState(0);\r\n  var [nameValue, setNameValue] = useState(\"Elyes Ben khoud\");\r\n  var [loginValue, setLoginValue] = useState(\"elyes@gmail.com\");\r\n  var [passwordValue, setPasswordValue] = useState(\"elyes\");\r\n\r\n  return (\r\n    <Grid container className={classes.container}>\r\n      <div className={classes.logotypeContainer}>\r\n        <img src={bg} alt=\"picture\" className={classes.logotypeImage} />\r\n      </div>\r\n      <div className={classes.formContainer}>\r\n        <div className={classes.form}>\r\n          <Tabs\r\n            value={activeTabId}\r\n            onChange={(e, id) => setActiveTabId(id)}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            centered\r\n          >\r\n            <Tab label=\"Login\" classes={{ root: classes.tab }} />\r\n            <Tab label=\"Register\" classes={{ root: classes.tab }} />\r\n          </Tabs>\r\n          {activeTabId === 0 && (\r\n            <React.Fragment>\r\n              <TextField\r\n                id=\"email\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={loginValue}\r\n                onChange={(e) => setLoginValue(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Email Adress\"\r\n                type=\"email\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                id=\"password\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={passwordValue}\r\n                onChange={(e) => setPasswordValue(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Password\"\r\n                type=\"password\"\r\n                fullWidth\r\n              />\r\n              <div className={classes.formButtons}>\r\n                {isLoading ? (\r\n                  <CircularProgress size={26} className={classes.loginLoader} />\r\n                ) : (\r\n                  <Button\r\n                    disabled={\r\n                      loginValue.length === 0 || passwordValue.length === 0\r\n                    }\r\n                    onClick={() =>\r\n                      loginUser(\r\n                        userDispatch,\r\n                        loginValue,\r\n                        passwordValue,\r\n                        props.history,\r\n                        setIsLoading,\r\n                        setError,\r\n                      )\r\n                    }\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                  >\r\n                    Login\r\n                  </Button>\r\n                )}\r\n                <Button\r\n                  color=\"primary\"\r\n                  size=\"large\"\r\n                  className={classes.forgetButton}\r\n                >\r\n                  Forget Password\r\n                </Button>\r\n              </div>\r\n              <div className={classes.formDividerContainer}>\r\n                <div className={classes.formDivider} />\r\n                <Typography className={classes.formDividerWord}>or</Typography>\r\n                <div className={classes.formDivider} />\r\n              </div>\r\n              <Button size=\"large\" className={classes.googleButton}>\r\n                <img src={google} alt=\"google\" className={classes.googleIcon} />\r\n                &nbsp;Sign in with Google\r\n              </Button>\r\n            </React.Fragment>\r\n          )}\r\n          {activeTabId === 1 && (\r\n            <React.Fragment>\r\n              <Fade in={error}>\r\n                <Typography color=\"secondary\" className={classes.errorMessage}>\r\n                  Something is wrong with your login or password :(\r\n                </Typography>\r\n              </Fade>\r\n              <TextField\r\n                id=\"name\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={nameValue}\r\n                onChange={(e) => setNameValue(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Full Name\"\r\n                type=\"text\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                id=\"email\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={loginValue}\r\n                onChange={(e) => setLoginValue(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Email Adress\"\r\n                type=\"email\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                id=\"password\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={passwordValue}\r\n                onChange={(e) => setPasswordValue(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Password\"\r\n                type=\"password\"\r\n                fullWidth\r\n              />\r\n              <div className={classes.creatingButtonContainer}>\r\n                {isLoading ? (\r\n                  <CircularProgress size={26} />\r\n                ) : (\r\n                  <Button\r\n                    onClick={() =>\r\n                      loginUser(\r\n                        userDispatch,\r\n                        loginValue,\r\n                        passwordValue,\r\n                        props.history,\r\n                        setIsLoading,\r\n                        setError,\r\n                      )\r\n                    }\r\n                    disabled={\r\n                      loginValue.length === 0 ||\r\n                      passwordValue.length === 0 ||\r\n                      nameValue.length === 0\r\n                    }\r\n                    size=\"large\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    fullWidth\r\n                    className={classes.createAccountButton}\r\n                  >\r\n                    Create your account\r\n                  </Button>\r\n                )}\r\n              </div>\r\n              <div className={classes.formDividerContainer}>\r\n                <div className={classes.formDivider} />\r\n                <Typography className={classes.formDividerWord}>or</Typography>\r\n                <div className={classes.formDivider} />\r\n              </div>\r\n              <Button\r\n                size=\"large\"\r\n                className={classnames(\r\n                  classes.googleButton,\r\n                  classes.googleButtonCreating,\r\n                )}\r\n              >\r\n                <img src={google} alt=\"google\" className={classes.googleIcon} />\r\n                &nbsp;Sign in with Google\r\n              </Button>\r\n            </React.Fragment>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default withRouter(Login);\r\n","C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\pages\\error\\Error.js",[],"C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\pages\\error\\styles.js",[],"C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\pages\\login\\styles.js",[],"C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\components\\Layout\\styles.js",[],"C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\pages\\charts\\Charts.js",[],"C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\pages\\icons\\Icons.js",[],"C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\pages\\tables\\Tables.js",[],"C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\pages\\maps\\Maps.js",[],"C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\pages\\typography\\Typography.js",["198","199","200","201"],"C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\pages\\dashboard\\Dashboard.js",[],"C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\components\\Sidebar\\Sidebar.js",["202","203","204","205","206"],"C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\pages\\notifications\\Notifications.js",[],"C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\components\\Header\\Header.js",["207","208"],"import React, { useState } from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  InputBase,\r\n  Menu,\r\n  MenuItem,\r\n  Fab,\r\n  Link,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Menu as MenuIcon,\r\n  MailOutline as MailIcon,\r\n  NotificationsNone as NotificationsIcon,\r\n  Person as AccountIcon,\r\n  Search as SearchIcon,\r\n  Send as SendIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n} from \"@material-ui/icons\";\r\nimport classNames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport { Badge, Typography, Button } from \"../Wrappers\";\r\nimport Notification from \"../Notification/Notification\";\r\nimport UserAvatar from \"../UserAvatar/UserAvatar\";\r\n\r\n// context\r\nimport {\r\n  useLayoutState,\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../context/LayoutContext\";\r\nimport { useUserDispatch, signOut } from \"../../context/UserContext\";\r\n\r\nconst messages = [\r\n  {\r\n    id: 0,\r\n    variant: \"warning\",\r\n    name: \"Jane Hew\",\r\n    message: \"Hey! How is it going?\",\r\n    time: \"9:32\",\r\n  },\r\n  {\r\n    id: 1,\r\n    variant: \"success\",\r\n    name: \"Lloyd Brown\",\r\n    message: \"Check out my new Dashboard\",\r\n    time: \"9:18\",\r\n  },\r\n  {\r\n    id: 2,\r\n    variant: \"primary\",\r\n    name: \"Mark Winstein\",\r\n    message: \"I want rearrange the appointment\",\r\n    time: \"9:15\",\r\n  },\r\n  {\r\n    id: 3,\r\n    variant: \"secondary\",\r\n    name: \"Liana Dutti\",\r\n    message: \"Good news from sale department\",\r\n    time: \"9:09\",\r\n  },\r\n];\r\n\r\nconst notifications = [\r\n  { id: 0, color: \"warning\", message: \"Check out this awesome ticket\" },\r\n  {\r\n    id: 1,\r\n    color: \"success\",\r\n    type: \"info\",\r\n    message: \"What is the best way to get ...\",\r\n  },\r\n  {\r\n    id: 2,\r\n    color: \"secondary\",\r\n    type: \"notification\",\r\n    message: \"This is just a simple notification\",\r\n  },\r\n  {\r\n    id: 3,\r\n    color: \"primary\",\r\n    type: \"e-commerce\",\r\n    message: \"12 new orders has arrived today\",\r\n  },\r\n];\r\n\r\nexport default function Header(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var layoutState = useLayoutState();\r\n  var layoutDispatch = useLayoutDispatch();\r\n  var userDispatch = useUserDispatch();\r\n\r\n  // local\r\n  var [mailMenu, setMailMenu] = useState(null);\r\n  var [isMailsUnread, setIsMailsUnread] = useState(true);\r\n  var [notificationsMenu, setNotificationsMenu] = useState(null);\r\n  var [isNotificationsUnread, setIsNotificationsUnread] = useState(true);\r\n  var [profileMenu, setProfileMenu] = useState(null);\r\n  var [isSearchOpen, setSearchOpen] = useState(false);\r\n\r\n  return (\r\n    <AppBar position=\"fixed\" className={classes.appBar}>\r\n      <Toolbar className={classes.toolbar}>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          onClick={() => toggleSidebar(layoutDispatch)}\r\n          className={classNames(\r\n            classes.headerMenuButtonSandwich,\r\n            classes.headerMenuButtonCollapse,\r\n          )}\r\n        >\r\n          {layoutState.isSidebarOpened ? (\r\n            <ArrowBackIcon\r\n              classes={{\r\n                root: classNames(\r\n                  classes.headerIcon,\r\n                  classes.headerIconCollapse,\r\n                ),\r\n              }}\r\n            />\r\n          ) : (\r\n            <MenuIcon\r\n              classes={{\r\n                root: classNames(\r\n                  classes.headerIcon,\r\n                  classes.headerIconCollapse,\r\n                ),\r\n              }}\r\n            />\r\n          )}\r\n        </IconButton>\r\n        <Typography variant=\"h6\" weight=\"medium\" className={classes.logotype}>\r\n          By-cycle\r\n        </Typography>\r\n        <div className={classes.grow} />\r\n\r\n        <div\r\n          className={classNames(classes.search, {\r\n            [classes.searchFocused]: isSearchOpen,\r\n          })}\r\n        >\r\n          <div\r\n            className={classNames(classes.searchIcon, {\r\n              [classes.searchIconOpened]: isSearchOpen,\r\n            })}\r\n            onClick={() => setSearchOpen(!isSearchOpen)}\r\n          >\r\n            <SearchIcon classes={{ root: classes.headerIcon }} />\r\n          </div>\r\n          <InputBase\r\n            placeholder=\"Search…\"\r\n            classes={{\r\n              root: classes.inputRoot,\r\n              input: classes.inputInput,\r\n            }}\r\n          />\r\n        </div>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"mail-menu\"\r\n          onClick={(e) => {\r\n            setNotificationsMenu(e.currentTarget);\r\n            setIsNotificationsUnread(false);\r\n          }}\r\n          className={classes.headerMenuButton}\r\n        >\r\n          <Badge\r\n            badgeContent={isNotificationsUnread ? notifications.length : null}\r\n            color=\"warning\"\r\n          >\r\n            <NotificationsIcon classes={{ root: classes.headerIcon }} />\r\n          </Badge>\r\n        </IconButton>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"mail-menu\"\r\n          onClick={(e) => {\r\n            setMailMenu(e.currentTarget);\r\n            setIsMailsUnread(false);\r\n          }}\r\n          className={classes.headerMenuButton}\r\n        >\r\n          <Badge\r\n            badgeContent={isMailsUnread ? messages.length : null}\r\n            color=\"secondary\"\r\n          >\r\n            <MailIcon classes={{ root: classes.headerIcon }} />\r\n          </Badge>\r\n        </IconButton>\r\n        <IconButton\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n          className={classes.headerMenuButton}\r\n          aria-controls=\"profile-menu\"\r\n          onClick={(e) => setProfileMenu(e.currentTarget)}\r\n        >\r\n          <AccountIcon classes={{ root: classes.headerIcon }} />\r\n        </IconButton>\r\n        <Menu\r\n          id=\"mail-menu\"\r\n          open={Boolean(mailMenu)}\r\n          anchorEl={mailMenu}\r\n          onClose={() => setMailMenu(null)}\r\n          MenuListProps={{ className: classes.headerMenuList }}\r\n          className={classes.headerMenu}\r\n          classes={{ paper: classes.profileMenu }}\r\n          disableAutoFocusItem\r\n        >\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography variant=\"h4\" weight=\"medium\">\r\n              New Messages\r\n            </Typography>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              component=\"a\"\r\n              color=\"secondary\"\r\n            >\r\n              {messages.length} New Messages\r\n            </Typography>\r\n          </div>\r\n          {messages.map((message) => (\r\n            <MenuItem key={message.id} className={classes.messageNotification}>\r\n              <div className={classes.messageNotificationSide}>\r\n                <UserAvatar color={message.variant} name={message.name} />\r\n                <Typography size=\"sm\" color=\"text\" colorBrightness=\"secondary\">\r\n                  {message.time}\r\n                </Typography>\r\n              </div>\r\n              <div\r\n                className={classNames(\r\n                  classes.messageNotificationSide,\r\n                  classes.messageNotificationBodySide,\r\n                )}\r\n              >\r\n                <Typography weight=\"medium\" gutterBottom>\r\n                  {message.name}\r\n                </Typography>\r\n                <Typography color=\"text\" colorBrightness=\"secondary\">\r\n                  {message.message}\r\n                </Typography>\r\n              </div>\r\n            </MenuItem>\r\n          ))}\r\n          <Fab\r\n            variant=\"extended\"\r\n            color=\"primary\"\r\n            aria-label=\"Add\"\r\n            className={classes.sendMessageButton}\r\n          >\r\n            Send New Message\r\n            <SendIcon className={classes.sendButtonIcon} />\r\n          </Fab>\r\n        </Menu>\r\n        <Menu\r\n          id=\"notifications-menu\"\r\n          open={Boolean(notificationsMenu)}\r\n          anchorEl={notificationsMenu}\r\n          onClose={() => setNotificationsMenu(null)}\r\n          className={classes.headerMenu}\r\n          disableAutoFocusItem\r\n        >\r\n          {notifications.map((notification) => (\r\n            <MenuItem\r\n              key={notification.id}\r\n              onClick={() => setNotificationsMenu(null)}\r\n              className={classes.headerMenuItem}\r\n            >\r\n              <Notification {...notification} typographyVariant=\"inherit\" />\r\n            </MenuItem>\r\n          ))}\r\n        </Menu>\r\n        <Menu\r\n          id=\"profile-menu\"\r\n          open={Boolean(profileMenu)}\r\n          anchorEl={profileMenu}\r\n          onClose={() => setProfileMenu(null)}\r\n          className={classes.headerMenu}\r\n          classes={{ paper: classes.profileMenu }}\r\n          disableAutoFocusItem\r\n        >\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography variant=\"h4\" weight=\"medium\">\r\n              John Smith\r\n            </Typography>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              component=\"a\"\r\n              color=\"primary\"\r\n              href=\"https://flatlogic.com\"\r\n            >\r\n              Flalogic.com\r\n            </Typography>\r\n          </div>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Profile\r\n          </MenuItem>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Tasks\r\n          </MenuItem>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Messages\r\n          </MenuItem>\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              color=\"primary\"\r\n              onClick={() => signOut(userDispatch, props.history)}\r\n            >\r\n              Sign Out\r\n            </Typography>\r\n          </div>\r\n        </Menu>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\pages\\charts\\components\\ApexHeatmap.js",[],"C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\pages\\dashboard\\mock.js",[],"C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\pages\\maps\\styles.js",[],"C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\pages\\icons\\styles.js",[],"C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\pages\\charts\\components\\ApexLineChart.js",[],"C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\pages\\notifications\\styles.js",[],"C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\pages\\dashboard\\components\\Table\\Table.js",[],"C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\components\\Sidebar\\styles.js",[],"C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\components\\PageTitle\\PageTitle.js",[],"C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\components\\Sidebar\\components\\Dot.js",[],"C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\pages\\dashboard\\components\\BigStat\\BigStat.js",[],"C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js",[],"C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\pages\\dashboard\\styles.js",[],"C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\components\\Widget\\Widget.js",[],"C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\pages\\typography\\styles.js",[],"C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\components\\Wrappers\\Wrappers.js",[],"C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\components\\Header\\styles.js",[],"C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\components\\Notification\\Notification.js",[],"C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\components\\UserAvatar\\UserAvatar.js",[],"C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\components\\PageTitle\\styles.js",[],"C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js",[],"C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\pages\\dashboard\\components\\BigStat\\styles.js",[],"C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\components\\Widget\\styles.js",[],"C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\components\\Notification\\styles.js",[],"C:\\Users\\Lenovo\\Desktop\\Admin-Template\\src\\components\\UserAvatar\\styles.js",[],{"ruleId":"209","replacedBy":"210"},{"ruleId":"211","replacedBy":"212"},{"ruleId":"213","severity":1,"message":"214","line":9,"column":18,"nodeType":"215","messageId":"216","endLine":9,"endColumn":30},{"ruleId":"213","severity":1,"message":"217","line":10,"column":17,"nodeType":"215","messageId":"216","endLine":10,"endColumn":28},{"ruleId":"218","severity":1,"message":"219","line":42,"column":9,"nodeType":"220","endLine":42,"endColumn":73},{"ruleId":"213","severity":1,"message":"221","line":2,"column":10,"nodeType":"215","messageId":"216","endLine":2,"endColumn":14},{"ruleId":"213","severity":1,"message":"222","line":9,"column":8,"nodeType":"215","messageId":"216","endLine":9,"endColumn":14},{"ruleId":"213","severity":1,"message":"223","line":10,"column":10,"nodeType":"215","messageId":"216","endLine":10,"endColumn":20},{"ruleId":"213","severity":1,"message":"224","line":13,"column":7,"nodeType":"215","messageId":"216","endLine":13,"endColumn":14},{"ruleId":"213","severity":1,"message":"225","line":5,"column":24,"nodeType":"215","messageId":"216","endLine":5,"endColumn":41},{"ruleId":"213","severity":1,"message":"226","line":9,"column":21,"nodeType":"215","messageId":"216","endLine":9,"endColumn":32},{"ruleId":"213","severity":1,"message":"227","line":10,"column":19,"nodeType":"215","messageId":"216","endLine":10,"endColumn":30},{"ruleId":"213","severity":1,"message":"228","line":11,"column":18,"nodeType":"215","messageId":"216","endLine":11,"endColumn":25},{"ruleId":"213","severity":1,"message":"229","line":23,"column":8,"nodeType":"215","messageId":"216","endLine":23,"endColumn":11},{"ruleId":"213","severity":1,"message":"230","line":10,"column":3,"nodeType":"215","messageId":"216","endLine":10,"endColumn":7},{"ruleId":"213","severity":1,"message":"231","line":27,"column":29,"nodeType":"215","messageId":"216","endLine":27,"endColumn":35},"no-native-reassign",["232"],"no-negated-in-lhs",["233"],"no-unused-vars","'FacebookIcon' is defined but never used.","Identifier","unusedVar","'TwitterIcon' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'Grid' is defined but never used.","'Widget' is defined but never used.","'Typography' is defined but never used.","'classes' is assigned a value but never used.","'NotificationsIcon' is defined but never used.","'SupportIcon' is defined but never used.","'LibraryIcon' is defined but never used.","'FAQIcon' is defined but never used.","'Dot' is defined but never used.","'Link' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]